# Generated by Django 3.2.7 on 2021-12-13 21:16

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProcessingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_num_in', models.CharField(blank=True, max_length=100, verbose_name='Tracking Number Recieving')),
                ('track_num_out', models.CharField(blank=True, max_length=100, verbose_name='Tracking Number Outgoing')),
                ('process_date', models.DateField(blank=True, null=True, verbose_name='Process Deadline')),
                ('quantity', models.IntegerField(verbose_name='Quantity of Wafers')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('grind_request', models.BooleanField(blank=True, default=False, null=True, verbose_name='Add Grind Request')),
                ('dicing_request', models.BooleanField(blank=True, default=False, null=True, verbose_name='Add Dicing Request')),
                ('attachment', models.FileField(blank=True, default='', help_text='Please attach a file with any additional information.', null=True, upload_to='', verbose_name='Information attachment')),
                ('company_name', models.ManyToManyField(to='company.Customer', verbose_name='Company')),
                ('engineer_PIC', models.ManyToManyField(blank=True, to='company.Engineer')),
                ('material_1', models.ManyToManyField(related_name='material_1', to='company.WaferMaterial', verbose_name='Material')),
                ('sales_PIC', models.ManyToManyField(to='company.Sales')),
            ],
            managers=[
                ('processing_requests', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='GrindRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonded_wafer', models.BooleanField(blank=True, default=False, null=True, verbose_name='Bonded Wafer')),
                ('pattern_wafer', models.BooleanField(blank=True, default=False, null=True, verbose_name='Pattern Wafer')),
                ('bumped_wafer', models.BooleanField(blank=True, default=False, null=True, verbose_name='Bumped Wafer')),
                ('taped_wafer', models.BooleanField(blank=True, default=False, null=True, verbose_name='Taped Wafer')),
                ('bond_material', models.ManyToManyField(blank=True, to='company.BondMaterial', verbose_name='Bond Material')),
                ('material_2', models.ManyToManyField(blank=True, related_name='material_2', related_query_name='material_2', to='company.WaferMaterial', verbose_name='Material 2')),
                ('process_request_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='process_grind_request', to='processing_requests.processingrequest')),
                ('tape', models.ManyToManyField(blank=True, to='company.Tape')),
                ('wafer_shape', models.ManyToManyField(to='company.WaferShape', verbose_name='Wafer Shape')),
                ('z1_wheel', models.ManyToManyField(blank=True, related_name='z1_wheel', to='company.GrindWheel', verbose_name='Z1 Wheel')),
                ('z2_wheel', models.ManyToManyField(blank=True, related_name='z2_wheel', to='company.GrindWheel', verbose_name='Z2 Wheel')),
                ('z3_wheel', models.ManyToManyField(blank=True, related_name='z3_wheel', to='company.PolishWheel', verbose_name='Z3 Wheel')),
            ],
        ),
        migrations.CreateModel(
            name='DicingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blade_thk_req', models.CharField(max_length=10, verbose_name='Blade Thickness Requirements')),
                ('street_width', models.CharField(max_length=10, verbose_name='Street Width')),
                ('die_or_index', models.CharField(choices=[('Die', 'Die'), ('Index', 'Index')], max_length=10, verbose_name='Die Size/index')),
                ('die_or_index_meas', models.CharField(max_length=10, verbose_name='Dimensions (in mm):')),
                ('cut_for_test', models.BooleanField(blank=True, default=False, null=True, verbose_name='Can material be cut into smaller pieces for testing?')),
                ('dicing_tape', models.BooleanField(blank=True, default=False, null=True, verbose_name='Tape Needed?')),
                ('process_request_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='process_dicing_request', to='processing_requests.processingrequest')),
            ],
        ),
    ]
